{
 "Parameters": {
  "SSHLocation": {
   "Type": "String",
   "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))$",
   "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
   "Description": "Please set CIDR to x.x.x.x/32 to allow one specific IP address access, 0.0.0.0/0 to allow all IP addresses access, or another CIDR range.",
   "MaxLength": 18,
   "MinLength": 9
  },
  "KeyName": {
   "Type": "AWS::EC2::KeyPair::KeyName",
   "AllowedPattern": ".+",
   "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
   "Description": "Name of an existing EC2 key pair to enable SSH access to the instance."
  },
  "InstanceType": {
   "Type": "String",
   "Default": "c5n.9xlarge",
   "ConstraintDescription": "EC2 instance type that supports Elastic Fiber Adapter (EFA).",
   "Description": "EC2 instance type"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "vpcsbxcdivpcFEE27BEE": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "sbx-cdi"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/vpc-sbx-cdi/vpc"
   }
  },
  "subnetscdiAsubnetF37012F5": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "vpcsbxcdivpcFEE27BEE"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "Name",
      "Value": "sbx-cdiA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/subnets/cdiA-subnet"
   }
  },
  "subnetscdiBsubnet1A3B9F51": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "vpcsbxcdivpcFEE27BEE"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "Name",
      "Value": "sbx-cdiB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/subnets/cdiB-subnet"
   }
  },
  "SGsMyCfnSecurityGroupA0E5FF69": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "sbx-cdi",
    "GroupName": "sbx-cdi",
    "Tags": [
     {
      "Key": "Name",
      "Value": "sbx-cdi"
     }
    ],
    "VpcId": {
     "Ref": "vpcsbxcdivpcFEE27BEE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/MyCfnSecurityGroup"
   }
  },
  "SGsACTL3UDPB94FEE9A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "udp",
    "CidrIp": "0.0.0.0/0",
    "Description": "Allow ACT-L3 inbound",
    "FromPort": 1770,
    "GroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    },
    "ToPort": 1780
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/ACTL3 UDP"
   }
  },
  "SGsACTL3TCPDE340485": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "CidrIp": "0.0.0.0/0",
    "Description": "Allow ACT-L3 inbound",
    "FromPort": 1770,
    "GroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    },
    "ToPort": 1780
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/ACTL3 TCP"
   }
  },
  "SGsHTTP81848A1A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "CidrIp": "0.0.0.0/0",
    "Description": "Allow HTTP access from the internet",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/HTTP"
   }
  },
  "SGsHTTPS92ABDDE2": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "CidrIp": "0.0.0.0/0",
    "Description": "Allow HTTPS access from the internet",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/HTTPS"
   }
  },
  "SGsSSH44508AD9": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "CidrIp": {
     "Ref": "SSHLocation"
    },
    "Description": "Allow SSH access from the internet",
    "FromPort": 22,
    "GroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    },
    "ToPort": 22
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/SSH"
   }
  },
  "SGsEnableEFAIngressA11F7208": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "-1",
    "Description": "Allow all traffic from myself",
    "GroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/Enable EFA Ingress"
   }
  },
  "SGsEnableEFAegressD7BE2DBA": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    },
    "IpProtocol": "-1",
    "Description": "Allow all traffic from myself",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/Enable EFA egress"
   }
  },
  "SGsEnablealloutboundegress37F6CF43": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "SGsMyCfnSecurityGroupA0E5FF69",
      "GroupId"
     ]
    },
    "IpProtocol": "-1",
    "CidrIp": "0.0.0.0/0",
    "Description": "Allow all traffic out"
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/SGs/Enable all outbound egress"
   }
  },
  "IGWigwsbxcdi7C0EA41C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "sbx-cdi"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/IGW/igw-sbx-cdi"
   }
  },
  "IGWvpcgwsbxcdiDF298982": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "vpcsbxcdivpcFEE27BEE"
    },
    "InternetGatewayId": {
     "Ref": "IGWigwsbxcdi7C0EA41C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/IGW/vpcgw-sbx-cdi"
   }
  },
  "rtablescdiArtableA59AF960": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "vpcsbxcdivpcFEE27BEE"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "sbx-cdiA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/rtables/cdiA-rtable"
   }
  },
  "rtablescdiBsrta63414513": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Fn::GetAtt": [
      "rtablescdiArtableA59AF960",
      "RouteTableId"
     ]
    },
    "SubnetId": {
     "Fn::GetAtt": [
      "subnetscdiBsubnet1A3B9F51",
      "SubnetId"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/rtables/cdiB-srta"
   }
  },
  "rtablescdiArouteEE2A88FE": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Fn::GetAtt": [
      "rtablescdiArtableA59AF960",
      "RouteTableId"
     ]
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "IGWigwsbxcdi7C0EA41C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/rtables/cdiA-route"
   }
  },
  "rtablescdiAsrtaA81E8116": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Fn::GetAtt": [
      "rtablescdiArtableA59AF960",
      "RouteTableId"
     ]
    },
    "SubnetId": {
     "Fn::GetAtt": [
      "subnetscdiAsubnetF37012F5",
      "SubnetId"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/rtables/cdiA-srta"
   }
  },
  "CDIcdirole92665D66": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for sbx CDI instances",
    "RoleName": {
     "Fn::Join": [
      "",
      [
       "sbx-cdi-",
       {
        "Ref": "AWS::Region"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/CDI/cdi-role/Resource"
   }
  },
  "CDIcdiroleDefaultPolicyE3F2C3C7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "mediaconnect:*",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CDIcdiroleDefaultPolicyE3F2C3C7",
    "Roles": [
     {
      "Ref": "CDIcdirole92665D66"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/CDI/cdi-role/DefaultPolicy/Resource"
   }
  },
  "CDIcdiInstanceProfile73CBEB23": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "CDIcdirole92665D66"
     }
    ],
    "InstanceProfileName": {
     "Fn::Join": [
      "",
      [
       "cdiInstanceProfile-",
       {
        "Ref": "AWS::Region"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/CDI/cdiInstanceProfile"
   }
  },
  "CDIlaunchtemplate8761A726": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "IamInstanceProfile": {
      "Arn": {
       "Fn::GetAtt": [
        "CDIcdiInstanceProfile73CBEB23",
        "Arn"
       ]
      }
     },
     "ImageId": {
      "Fn::FindInMap": [
       "CDIRegionMapEF10A6AE",
       {
        "Ref": "AWS::Region"
       },
       "ami"
      ]
     },
     "InstanceType": {
      "Ref": "InstanceType"
     },
     "KeyName": {
      "Ref": "KeyName"
     },
     "NetworkInterfaces": [
      {
       "AssociatePublicIpAddress": true,
       "DeviceIndex": 0,
       "Groups": [
        {
         "Fn::GetAtt": [
          "SGsMyCfnSecurityGroupA0E5FF69",
          "GroupId"
         ]
        }
       ],
       "InterfaceType": "efa",
       "SubnetId": {
        "Fn::GetAtt": [
         "subnetscdiAsubnetF37012F5",
         "SubnetId"
        ]
       }
      }
     ],
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "sbx-cdi"
        }
       ]
      }
     ],
     "UserData": {
      "Fn::Base64": "#!/usr/bin/env bash\n# update administrator password to ec2 instance-id\nphp /opt/sbx/update_pass_accounts.php --xml=/var/www/html/data/accounts.xml\n\n/opt/sbx/InstallSbxCDI/sanity_check\nPATH=/opt/amazon/efa/bin:$PATH /opt/sbx/InstallSbxCDI/aws-efa-installer/efa_test.sh\n"
     }
    },
    "LaunchTemplateName": "sbx-cdi"
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/CDI/launch-template"
   }
  },
  "CDIInstance18DD8688F": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "LaunchTemplate": {
     "LaunchTemplateId": {
      "Ref": "CDIlaunchtemplate8761A726"
     },
     "Version": {
      "Fn::GetAtt": [
       "CDIlaunchtemplate8761A726",
       "LatestVersionNumber"
      ]
     }
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "sbx-cdi"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/CDI/Instance1"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2WOQW+CQBCFf4t32FZiTK+GNIbEpgRNr82wjDoKs2R3tsYQ/nthaeXgad58M3nvJSpZqeUCbi7W1TWuqVTdXkBfo/TIOVhoUNBGw/27Q52obsBfeTpe975klKBQe0ty31rj2yeQ8cmic0/8/YEzHjIGry0I3uAeTRl/20aGOucGOUQVxgseoKxxrjCzjXNGEwgZfjyPYgee9fmATVvDRDJ2Aqyxjwga1RVmMgwzNzXp0GJW//+5NUeqse9H+AFtS3wa5aeX1k8N0RlvdbBLDVc0tukjNhWqi3v5Wb6ptXpdXBxRbD0LNaiKaf4CO670Do0BAAA="
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "CDIRegionMapEF10A6AE": {
   "us-west-2": {
    "ami": "ami-06caef45b966ee963"
   },
   "us-west-1": {
    "ami": "ami-0abda61e1bea911ca"
   },
   "us-east-2": {
    "ami": "ami-0bc121d92def0c8d0"
   },
   "us-east-1": {
    "ami": "ami-019841f3bbdbdb5ed"
   },
   "sa-east-1": {
    "ami": "ami-096a38194aebe9016"
   },
   "me-south-1": {
    "ami": "ami-026aefc164c053e48"
   },
   "eu-west-3": {
    "ami": "ami-0847574a5a1fd4d96"
   },
   "eu-west-2": {
    "ami": "ami-053efb2000d7311dd"
   },
   "eu-west-1": {
    "ami": "ami-00b24f2c1ac262051"
   },
   "eu-south-1": {
    "ami": "ami-0396225aec95ac6a3"
   },
   "eu-north-1": {
    "ami": "ami-0915bbefbdb12621c"
   },
   "eu-central-1": {
    "ami": "ami-0d7d0de034a1cfc14"
   },
   "ca-central-1": {
    "ami": "ami-0333ec80090dd316d"
   },
   "ap-southeast-3": {
    "ami": "ami-0116ebd5325571b75"
   },
   "ap-southeast-2": {
    "ami": "ami-009d710b95f9bf83c"
   },
   "ap-southeast-1": {
    "ami": "ami-00de4c2adccce6eeb"
   },
   "ap-south-1": {
    "ami": "ami-03f23decb2e38357b"
   },
   "ap-northeast-3": {
    "ami": "ami-0d9770bee7716c240"
   },
   "ap-northeast-2": {
    "ami": "ami-065e3c7a60a975926"
   },
   "ap-northeast-1": {
    "ami": "ami-0582ce1406a0c709b"
   },
   "ap-east-1": {
    "ami": "ami-0e96edc9d7338aff4"
   },
   "af-south-1": {
    "ami": "ami-021d89e2c475882dc"
   }
  }
 },
 "Outputs": {
  "CDIpublicIp2E8E33E7": {
   "Description": "Instance Public Ip",
   "Value": {
    "Fn::GetAtt": [
     "CDIInstance18DD8688F",
     "PublicIp"
    ]
   },
   "Export": {
    "Name": "ec2-public-ip"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}